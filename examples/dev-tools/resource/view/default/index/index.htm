{subtemplate common/header}

<script async="async" src="{assets static/js/jquery.json.js}"></script>
<script async="async" src="{assets static/js/bignumber.min.js}"></script>
<script async="async" src="{assets static/js/clipboard.min.js}"></script>
<script async="async" src="{assets static/js/EndecodeParser.js}"></script>
<!-- <script async="async" src="https://cdnjs.cloudflare.com/ajax/libs/crypto-js/4.1.1/crypto-js.min.js" integrity="sha512-E8QSvWZ0eCLGk4km3hxSsNmGWbLtSCSUcewDQPQWZF6pEU8GlT8a5fF32wOl1i8ftdMhssTrF/OhyGWwonTcXA==" crossorigin="anonymous" referrerpolicy="no-referrer"></script> -->
<link rel="stylesheet" type="text/css" href="{assets static/css/font-awesome.min.css}" />
<style>
    form {
        margin-block-end: 0em;
    }
    #content {
        border: 0px;
        width: 100%;
        background-color: #fff;
        outline:none;
        padding: 10px;
        height: 100px;
    }

    .fa { margin-left: 5px; margin-right: 2px;}
    .txtResult { outline: none; border: 0px; padding: 3px 10px;}
    .txtDateTime { width: 300px; }

</style>

<div class="container">
    <div class="panel panel-default">
        <div class="panel-heading">
            <p>hello, you can input a few type string that like <kbd>json</kbd> <kbd>timestamp</kbd>, <kbd>url en/decode</kbd>, will auto detect it and en/decode.</p>
            <p>more function is building.</p>
            <br />
            <p>
                current timestamp: <input type="text" class="clickSel txtResult" id="txtCurTimestamp" style="width: 124px;" />
                current datetime: <input type="text" class="clickSel txtResult" id="txtCurDateTime" style="width: 300px;" />
            </p>
        </div>
        <div class="panel-body" style="background-color: #fafafa;">
            <form>
                <textarea id="content" class="clickSel" placeholder="please input Json, Timestamp here..."></textarea>
            </form>
        </div>
        <div class="panel-body hide" id="parser-menu">
            <button class="btn btn-default" type="submit" data-name="">Button</button>
        </div>
        <div class="panel-footer" id="resultTitle">
            <div class="row">
                <div class="col-md-1" style="line-height: 40px;">Result</div>
                <div class="col-md-11"><div class="sharethis-inline-share-buttons"></div></div>
            </div>
            
            
        </div>
        
        <div class="panel-body" id="result" style="background-color: #fafafa;">
            {template parsers/TimestampParser}
            {template parsers/UrlDeParser}
            {template parsers/UrlEnParser}
            {template parsers/JsonParser}
            <div id="parseError" class="bg-danger result">

            </div>
        </div>
      </div>

      {template index/sections/timestamp}
</div>
<script>
    var timerCurrent = null;
    var isJsonExpanded = true;

    var parsers = [
        new JsonParser(),
        new TimestampParser(),
        new UrlDeParser(),
        new UrlEnParser(),
    ];

    $(function($) {
        $("#content").focus();

        $(".clickSel").bind('focus',function() {
            $(this).select();
        })

        $('#content').bind('input propertychange', function() {
            onContentChanged()
        })

        $(".result").hide()
        currentTime()
        var clipboard = new ClipboardJS('.btn-copy');
        // initParserMenu()
    });

    function collapse(indent) {
        $(".fa-iden"+indent).click()
    }
    function expand() {
        while ($(".fa-plus-square-o").length > 0) {
            $(".fa-plus-square-o").click();
        }
    }

    function onContentChanged() {
        let content = document.getElementById('content').value.trim();

        for (const parser of parsers) {
            parser.setContent(content)
            if (parser.isMatch()) {
                parser.do()
                parser.setCurrent()
                break
            }
        }
    }

    function initParserMenu() {
        let html = ""
        $("#parser-menu").html('')
        for (const parser of parsers) {
            let tmp = '<button class="btn '; //' type="submit" data-name="">Button</button>'
            if (parser.isCurrent()) {
                tmp += 'btn-primary'
            } else {
                tmp += 'btn-default'
            }
            tmp += '" type="button" data-name="' + parser.getParserName() + '">' + parser.getParserName() + '</button>'
            html += tmp
        }

        $("#parser-menu").html(html)
    }

    function currentTime() {
        $("#txtCurTimestamp").val(Math.round(new Date() / 1000))
        $("#txtCurDateTime").val(new Date().toISOString())
    }

    function parseError(str) {
        $("#parseError").html(str)
        $("#parseError").show()
    }
</script>
{template common/footer}